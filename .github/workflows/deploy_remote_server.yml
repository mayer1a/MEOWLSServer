name: Deploy to Ubuntu Server, build and run docker

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Get Docker container ID
        id: get_container_id
        run: echo "CONTAINER_ID=$(docker container ls -q -f name=${{ secrets.CONTAINER_NAME }})" >> $GITHUB_ENV

      - name: Get Docker image ID
        id: get_image_id
        run: echo "IMAGE_ID=$(docker images -q ${{ secrets.CONTAINER_NAME }}:latest)" >> $GITHUB_ENV

      - name: Deploy to Ubuntu server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            # Переход к каталогу с проектом
            cd /root/MEOWLSServer/MEOWLSServer/
            
            # Обновление кода
            git pull origin main
            
            # Сборка и запуск контейнера
            docker build -t ${{ secrets.CONTAINER_NAME }} .

            echo "Stop and remove old container"
            docker container stop $CONTAINER_ID && docker container rm $CONTAINER_ID

            echo "Remove old image"
            docker rmi $IMAGE_ID

            echo "Run new container"
            docker run --restart=always --name ${{ secrets.CONTAINER_NAME }} --network meowls_network -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} -e DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} -e DADATA_TOKEN="${{ secrets.DADATA_TOKEN }}" -p ${{ secrets.DATABASE_PORT }} -d ${{ secrets.CONTAINER_NAME }}:latest

            echo "Remove cache and prune unused images, containers"
            docker system prune -a -f
          EOF
